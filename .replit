modules = ["python-3.11"]

[nix]
channel = "stable-25_05"
packages = ["glibcLocales", "libxcrypt", "redis"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Plagiarism Detection API"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Redis Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Celery Worker"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flower Monitor"

[[workflows.workflow]]
name = "Plagiarism Detection API"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python main.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Redis Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "redis-server redis.conf"
waitForPort = 6379

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "Celery Worker"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "celery -A celery_app worker --loglevel=info --concurrency=2 -Q celery,plagiarism,similarity"

[workflows.workflow.metadata]
outputType = "console"

[[workflows.workflow]]
name = "Flower Monitor"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "celery -A celery_app flower --port=5555 --address=0.0.0.0"
waitForPort = 5555

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5555
externalPort = 3001

[[ports]]
localPort = 6379
externalPort = 3000

[deployment]
deploymentTarget = "gce"
build = ["sh", "-c", "pip install fastapi uvicorn scikit-learn numpy aiohttp pydantic"]
run = ["sh", "-c", "uvicorn main:app --host 0.0.0.0 --port $PORT"]
